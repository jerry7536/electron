name: Build
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Build Release Files
        run: pnpm build

      - uses: actions/upload-artifact@v3
        with:
          name: release-asar
          path: release/*.asar.gz
          if-no-files-found: ignore

      - uses: actions/upload-artifact@v3
        with:
          name: release-windows
          path: |
            release/*Setup*.exe
            release/*win.7z
          if-no-files-found: ignore

      - uses: actions/upload-artifact@v3
        with:
          name: release-macos
          path: release/*.dmg
          if-no-files-found: ignore

      - uses: actions/upload-artifact@v3
        with:
          name: release-linux
          path: release/*.AppImage
          if-no-files-found: ignore

  release:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: download-artifacts
        uses: actions/download-artifact@v3
        with:
          path: release-artifacts

      - name: list all release files
        run: |
          ls -R release-artifacts

      - name: release
        uses: softprops/action-gh-release@v1
        with:
          files: release-artifacts/**/*
          name: Release ${{ github.ref }}
          prerelease: true
          token: ${{ secrets.TOKEN }}
          generate_release_notes: true

      - name: Setup Pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: changelog
        run: pnpm exec changelogen@latest gh release --token ${{ secrets.TOKEN }}
